'use strict';

function run(fn) {
    return fn();
}
function blank_object() {
    return Object.create(null);
}
function run_all(fns) {
    fns.forEach(run);
}

let current_component;
function set_current_component(component) {
    current_component = component;
}
const escaped = {
    '"': '&quot;',
    "'": '&#39;',
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;'
};
function escape(html) {
    return String(html).replace(/["'&<>]/g, match => escaped[match]);
}
function each(items, fn) {
    let str = '';
    for (let i = 0; i < items.length; i += 1) {
        str += fn(items[i], i);
    }
    return str;
}
function validate_component(component, name) {
    if (!component || !component.$$render) {
        if (name === 'svelte:component')
            name += ' this={...}';
        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);
    }
    return component;
}
let on_destroy;
function create_ssr_component(fn) {
    function $$render(result, props, bindings, slots) {
        const parent_component = current_component;
        const $$ = {
            on_destroy,
            context: new Map(parent_component ? parent_component.$$.context : []),
            // these will be immediately discarded
            on_mount: [],
            before_update: [],
            after_update: [],
            callbacks: blank_object()
        };
        set_current_component({ $$ });
        const html = fn(result, props, bindings, slots);
        set_current_component(parent_component);
        return html;
    }
    return {
        render: (props = {}, options = {}) => {
            on_destroy = [];
            const result = { title: '', head: '', css: new Set() };
            const html = $$render(result, props, {}, options);
            run_all(on_destroy);
            return {
                html,
                css: {
                    code: Array.from(result.css).map(css => css.code).join('\n'),
                    map: null // TODO
                },
                head: result.title + result.head
            };
        },
        $$render
    };
}
function add_attribute(name, value, boolean) {
    if (value == null || (boolean && !value))
        return '';
    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `"${value}"`}`}`;
}

/* src/components/Showcase/ShowcaseItem.svelte generated by Svelte v3.25.1 */

const css = {
	code: "dl.svelte-r9nfvp>div.svelte-r9nfvp:nth-of-type(odd){background-color:#eee}dl.svelte-r9nfvp>div.svelte-r9nfvp:nth-of-type(even){background-color:white}",
	map: "{\"version\":3,\"file\":\"ShowcaseItem.svelte\",\"sources\":[\"ShowcaseItem.svelte\"],\"sourcesContent\":[\"<script>\\n  export let item\\n  let displayDetails = false\\n  let seeRawDetails = false\\n  const shorten = str => str.length > 200 ? str.slice(0,200) + '...' : str\\n  let shortDesc =\\n    item.desc ||\\n    (item.description ? shorten(item.description) : undefined)\\n\\n  \\n  function parseVideoURL(videoURL) {\\n    if (videoURL.startsWith('https://www.youtube.com/watch')) {\\n      return new URL(videoURL).searchParams.get('v')\\n    } else if (videoURL.startsWith('https://youtu.be/')) {\\n      return videoURL.slice(17)\\n    } \\n    return null\\n  }\\n</script>\\n\\n<style>dl > div:nth-of-type(odd) {\\n  background-color: #eee;\\n}\\n\\ndl > div:nth-of-type(even) {\\n  background-color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb21wb25lbnRzL1Nob3djYXNlL3NyYy9jb21wb25lbnRzL1Nob3djYXNlL1Nob3djYXNlSXRlbS5zdmVsdGUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0U7RUFDRSxzQkFBc0I7QUFDeEI7O0FBQ0E7RUFDRSx1QkFBdUI7QUFDekIiLCJmaWxlIjoic3JjL2NvbXBvbmVudHMvU2hvd2Nhc2UvU2hvd2Nhc2VJdGVtLnN2ZWx0ZSIsInNvdXJjZXNDb250ZW50IjpbIlxuICBkbCA+IGRpdjpudGgtb2YtdHlwZShvZGQpIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xuICB9XG4gIGRsID4gZGl2Om50aC1vZi10eXBlKGV2ZW4pIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgfVxuIl19 */</style>\\n\\n<div\\n  class=\\\"block hover:bg-teal-100 focus:outline-none focus:bg-gray-50 transition\\n    duration-150 ease-in-out\\\">\\n  {#if item.type === 'Essays' && item.slug}\\n    <a href={`/${item.slug}`}>\\n      <div class=\\\"px-4 py-4 sm:px-6\\\">\\n        <div class=\\\"flex items-center justify-between\\\">\\n          <div class=\\\"text-sm leading-5 font-medium text-indigo-600 truncate\\\">\\n            {item.title}\\n          </div>\\n          <div class=\\\"ml-2 flex-shrink-0 flex\\\">\\n            <span\\n              class:bg-green-100={item.type === 'Essays'}\\n              class:text-green-800={item.type === 'Essays'}\\n              class:bg-blue-100={item.type === 'Talks'}\\n              class:text-blue-800={item.type === 'Talks'}\\n              class:bg-teal-100={item.type === 'Podcasts'}\\n              class:text-teal-800={item.type === 'Podcasts'}\\n              class=\\\"px-2 inline-flex text-xs leading-5 font-semibold\\n                rounded-full\\\">\\n              {item.type}\\n            </span>\\n          </div>\\n        </div>\\n        <div class=\\\"my-2 sm:flex sm:justify-between\\\">\\n          <div class=\\\"sm:flex\\\">\\n            <div class=\\\"mr-6 flex items-center text-sm leading-5 text-gray-500\\\">\\n              <!-- Heroicon name: users -->\\n              <svg\\n                class=\\\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\\\"\\n                viewBox=\\\"0 0 20 20\\\"\\n                fill=\\\"currentColor\\\">\\n                <path\\n                  d=\\\"M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z\\\" />\\n              </svg>\\n              {item.categories && item.categories.length ? item.categories.join(', ') : 'Uncategorized'}\\n              <!-- {item.tags} -->\\n            </div>\\n          </div>\\n          <div class=\\\"mt-2 flex text-sm leading-5 text-gray-500 sm:mt-0\\\">\\n            {#if item.type === 'Talks'}\\n              <!-- Heroicon name: location-marker -->\\n              {#each item.instances as instance}\\n                <div class=\\\"flex\\\">\\n                  <svg\\n                    class=\\\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\\\"\\n                    viewBox=\\\"0 0 20 20\\\"\\n                    fill=\\\"currentColor\\\">\\n                    <path\\n                      fill-rule=\\\"evenodd\\\"\\n                      d=\\\"M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z\\\"\\n                      clip-rule=\\\"evenodd\\\" />\\n                  </svg>\\n                  <span>\\n                    <time\\n                      datetime={new Date(instance.date)\\n                        .toISOString()\\n                        .slice(\\n                          0,\\n                          10\\n                        )}>{new Date(instance.date).toDateString().slice(4)}</time>\\n                    @ {instance.venue}\\n                  </span>\\n                </div>\\n              {/each}\\n            {:else}\\n              <!-- Heroicon name: calendar -->\\n              <svg\\n                class=\\\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\\\"\\n                viewBox=\\\"0 0 20 20\\\"\\n                fill=\\\"currentColor\\\">\\n                <path\\n                  fill-rule=\\\"evenodd\\\"\\n                  d=\\\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\\\"\\n                  clip-rule=\\\"evenodd\\\" />\\n              </svg>\\n              <span>\\n                <time\\n                  datetime={new Date(item.date)\\n                    .toISOString()\\n                    .slice(\\n                      0,\\n                      10\\n                    )}>{new Date(item.date).toDateString().slice(4)}</time>\\n              </span>\\n            {/if}\\n          </div>\\n        </div>\\n        {#if displayDetails === false && shortDesc}\\n          <div class=\\\"\\\">{shortDesc}</div>\\n        {/if}\\n      </div>\\n    </a>\\n  {:else}\\n    <div\\n      on:click={() => (displayDetails = !displayDetails)}\\n      class=\\\"cursor-pointer px-4 py-4 sm:px-6\\\">\\n      <div class=\\\"flex items-center justify-between\\\">\\n        <div class=\\\"text-sm leading-5 font-medium text-indigo-600 truncate\\\">\\n          {item.title}\\n        </div>\\n        <div class=\\\"ml-2 flex-shrink-0 flex\\\">\\n          <span\\n            class=\\\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full\\n              bg-green-100 text-green-800\\\">\\n            {item.type}\\n          </span>\\n        </div>\\n      </div>\\n      <div class=\\\"my-2 sm:flex sm:justify-between\\\">\\n        <div class=\\\"sm:flex\\\">\\n          <div class=\\\"mr-6 flex items-center text-sm leading-5 text-gray-500\\\">\\n            <!-- Heroicon name: users -->\\n            <svg\\n              class=\\\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\\\"\\n              viewBox=\\\"0 0 20 20\\\"\\n              fill=\\\"currentColor\\\">\\n              <path\\n                d=\\\"M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z\\\" />\\n            </svg>\\n            {item.categories && item.categories.length ? item.categories.join(', ') : 'Uncategorized'}\\n            <!-- {item.tags} -->\\n          </div>\\n        </div>\\n        <div class=\\\"mt-2 flex text-sm leading-5 text-gray-500 sm:mt-0\\\">\\n          {#if item.type === 'Talks'}\\n            <!-- Heroicon name: location-marker -->\\n            {#each item.instances as instance}\\n              <div class=\\\"flex\\\">\\n                <svg\\n                  class=\\\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\\\"\\n                  viewBox=\\\"0 0 20 20\\\"\\n                  fill=\\\"currentColor\\\">\\n                  <path\\n                    fill-rule=\\\"evenodd\\\"\\n                    d=\\\"M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z\\\"\\n                    clip-rule=\\\"evenodd\\\" />\\n                </svg>\\n                <span>\\n                  <time\\n                    datetime={new Date(instance.date)\\n                      .toISOString()\\n                      .slice(\\n                        0,\\n                        10\\n                      )}>{new Date(instance.date).toDateString().slice(4)}</time>\\n                  @ {instance.venue}\\n                </span>\\n              </div>\\n            {/each}\\n          {:else}\\n            <!-- Heroicon name: calendar -->\\n            <svg\\n              class=\\\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\\\"\\n              viewBox=\\\"0 0 20 20\\\"\\n              fill=\\\"currentColor\\\">\\n              <path\\n                fill-rule=\\\"evenodd\\\"\\n                d=\\\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\\\"\\n                clip-rule=\\\"evenodd\\\" />\\n            </svg>\\n            <span>\\n              <time\\n                datetime={new Date(item.date)\\n                  .toISOString()\\n                  .slice(\\n                    0,\\n                    10\\n                  )}>{new Date(item.date).toDateString().slice(4)}</time>\\n            </span>\\n          {/if}\\n        </div>\\n      </div>\\n      {#if displayDetails === false && shortDesc}\\n        <div class=\\\"\\\">{shortDesc}</div>\\n      {/if}\\n    </div>\\n  {/if}\\n  {#if displayDetails}\\n    <dl>\\n      {#if item.canonical}\\n        <div class=\\\"px-4 py-2 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\\\">\\n          <dt class=\\\"text-sm leading-5 font-medium text-gray-500\\\">\\n            Originally posted at:\\n          </dt>\\n          <dd\\n            class=\\\"mt-1 text-sm leading-5 text-gray-900 sm:mt-0 sm:col-span-2\\\">\\n            <a\\n              class=\\\"underline hover:text-blue-700\\\"\\n              href={item.canonical}>{item.canonical}</a>\\n          </dd>\\n        </div>\\n      {/if}\\n      {#if item.url}\\n        <div class=\\\"px-4 py-2 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6 break-all\\\">\\n          <dt class=\\\"text-sm leading-5 font-medium text-gray-500\\\">URL</dt>\\n          <dd\\n            class=\\\"mt-1 text-sm leading-5 text-gray-900 sm:mt-0 sm:col-span-2\\\">\\n            <a\\n              class=\\\"underline hover:text-blue-700\\\"\\n              href={item.url}>{item.url}</a>\\n          </dd>\\n        </div>\\n      {/if}\\n      {#if item.slides}\\n        <div class=\\\"px-4 py-2 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\\\">\\n          <dt class=\\\"text-sm leading-5 font-medium text-gray-500\\\">Slides</dt>\\n          <dd\\n            class=\\\"mt-1 text-sm leading-5 text-gray-900 sm:mt-0 sm:col-span-2\\\">\\n            <a\\n              class=\\\"underline hover:text-blue-700\\\"\\n              href={item.slides}>{item.slides}</a>\\n          </dd>\\n        </div>\\n      {/if}\\n      {#if item.description}\\n        <div class=\\\"px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\\\">\\n          <dt class=\\\"text-sm leading-5 font-medium text-gray-500\\\">\\n            Description\\n          </dt>\\n          <dd\\n            class=\\\"mt-1 text-sm leading-5 text-gray-900 sm:mt-0 sm:col-span-2\\\">\\n            {item.description}\\n          </dd>\\n        </div>\\n      {/if}\\n    </dl>\\n\\n    <div class=\\\"px-4 sm:px-6\\\">\\n      {#if item.instances}\\n      \\n      <!-- <div class=\\\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\\\"> -->\\n      <div class=\\\"bg-white sm:grid sm:grid-cols-3\\\">\\n        <dt class=\\\"text-sm leading-5 font-medium text-gray-500\\\">\\n          Instances\\n        </dt>\\n        <dd class=\\\"mt-1 text-sm leading-5 text-gray-900 sm:mt-0 sm:col-span-2\\\">\\n          <ul class=\\\"border border-gray-200 rounded-md\\\">\\n            {#each item.instances as instance}\\n            <li class=\\\"pl-3 pr-4 flex items-center justify-between text-sm leading-5\\\">\\n              <div class=\\\"w-0 flex-1 flex items-center\\\">\\n                On {new Date(instance.date).toDateString().slice(4)} at {instance.venue}\\n              </div>\\n              <div class=\\\"ml-4 flex-shrink-0\\\">\\n                📺 <a class=\\\"underline hover:text-blue-900\\\" href={instance.video}>Link to Video</a>\\n                <!-- <div class=\\\"VideoDiv\\\">\\n                  <iframe\\n                    src={`https://www.youtube.com/embed/${parseVideoURL(instance.video)}`}\\n                    title={item.title}\\n                    name={item.title}\\n                    allow=\\\"accelerometer; autoplay; encrypted-media; gyroscope;\\n                    picture-in-picture\\\"\\n                    frameBorder=\\\"0\\\"\\n                    webkitallowfullscreen=\\\"true\\\"\\n                    mozallowfullscreen=\\\"true\\\"\\n                    width=\\\"600\\\"\\n                    height=\\\"400\\\"\\n                    allowFullScreen\\n                    aria-hidden=\\\"true\\\" />\\n                </div> -->\\n              </div>\\n            </li>\\n            {/each}\\n          </ul>\\n        </dd>\\n      </div>\\n\\n      <!-- {:else} -->\\n      {/if}\\n\\n      <!-- raw details button toggle -->\\n      <div class=\\\"flex items-center my-2\\\">\\n        <!-- This component requires you to enable the `group-focus` variant for `boxShadow` utilities. -->\\n        <span\\n          on:click={() => (seeRawDetails = !seeRawDetails)}\\n          role=\\\"checkbox\\\"\\n          tabindex=\\\"0\\\"\\n          aria-checked=\\\"false\\\"\\n          class=\\\"group relative inline-flex items-center justify-center\\n            flex-shrink-0 h-5 w-10 cursor-pointer focus:outline-none mr-2\\\">\\n          <!-- On: \\\"bg-indigo-600\\\", Off: \\\"bg-gray-200\\\" -->\\n          <span\\n            aria-hidden=\\\"true\\\"\\n            class:bg-indigo-600={seeRawDetails}\\n            class=\\\"bg-gray-500 absolute h-4 w-8 mx-auto rounded-full\\n              transition-colors ease-in-out duration-200\\\" />\\n          <!-- On: \\\"translate-x-5\\\", Off: \\\"translate-x-0\\\" -->\\n          <span\\n            aria-hidden=\\\"true\\\"\\n            class:translate-x-5={seeRawDetails}\\n            class=\\\"translate-x-0 absolute left-0 inline-block h-5 w-5 border\\n              border-gray-200 rounded-full bg-white shadow transform\\n              group-focus:shadow-outline group-focus:border-blue-300\\n              transition-transform ease-in-out duration-200\\\" />\\n        </span> See Raw\\n      </div>\\n      {#if seeRawDetails}\\n        <pre>{JSON.stringify(item, null, 2)}</pre>\\n      {/if}\\n    </div>\\n  {/if}\\n</div>\\n\"],\"names\":[],\"mappings\":\"AAoBO,gBAAE,CAAG,iBAAG,aAAa,GAAG,CAAC,AAAC,CAAC,AAChC,gBAAgB,CAAE,IAAI,AACxB,CAAC,AAED,gBAAE,CAAG,iBAAG,aAAa,IAAI,CAAC,AAAC,CAAC,AAC1B,gBAAgB,CAAE,KAAK,AACzB,CAAC\"}"
};

const ShowcaseItem = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { item } = $$props;
	const shorten = str => str.length > 200 ? str.slice(0, 200) + "..." : str;
	let shortDesc = item.desc || (item.description ? shorten(item.description) : undefined);
	if ($$props.item === void 0 && $$bindings.item && item !== void 0) $$bindings.item(item);
	$$result.css.add(css);

	return `<div class="${"block hover:bg-teal-100 focus:outline-none focus:bg-gray-50 transition\n    duration-150 ease-in-out"}">${item.type === "Essays" && item.slug
	? `<a${add_attribute("href", `/${item.slug}`, 0)}><div class="${"px-4 py-4 sm:px-6"}"><div class="${"flex items-center justify-between"}"><div class="${"text-sm leading-5 font-medium text-indigo-600 truncate"}">${escape(item.title)}</div>
          <div class="${"ml-2 flex-shrink-0 flex"}"><span class="${[
			"px-2 inline-flex text-xs leading-5 font-semibold\n                rounded-full",
			(item.type === "Essays" ? "bg-green-100" : "") + " " + (item.type === "Essays" ? "text-green-800" : "") + " " + (item.type === "Talks" ? "bg-blue-100" : "") + " " + (item.type === "Talks" ? "text-blue-800" : "") + " " + (item.type === "Podcasts" ? "bg-teal-100" : "") + " " + (item.type === "Podcasts" ? "text-teal-800" : "")
		].join(" ").trim()}">${escape(item.type)}</span></div></div>
        <div class="${"my-2 sm:flex sm:justify-between"}"><div class="${"sm:flex"}"><div class="${"mr-6 flex items-center text-sm leading-5 text-gray-500"}">
              <svg class="${"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400"}" viewBox="${"0 0 20 20"}" fill="${"currentColor"}"><path d="${"M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z"}"></path></svg>
              ${escape(item.categories && item.categories.length
		? item.categories.join(", ")
		: "Uncategorized")}
              </div></div>
          <div class="${"mt-2 flex text-sm leading-5 text-gray-500 sm:mt-0"}">${item.type === "Talks"
		? `
              ${each(item.instances, instance => `<div class="${"flex"}"><svg class="${"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400"}" viewBox="${"0 0 20 20"}" fill="${"currentColor"}"><path fill-rule="${"evenodd"}" d="${"M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z"}" clip-rule="${"evenodd"}"></path></svg>
                  <span><time${add_attribute("datetime", new Date(instance.date).toISOString().slice(0, 10), 0)}>${escape(new Date(instance.date).toDateString().slice(4))}</time>
                    @ ${escape(instance.venue)}</span>
                </div>`)}`
		: `
              <svg class="${"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400"}" viewBox="${"0 0 20 20"}" fill="${"currentColor"}"><path fill-rule="${"evenodd"}" d="${"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"}" clip-rule="${"evenodd"}"></path></svg>
              <span><time${add_attribute("datetime", new Date(item.date).toISOString().slice(0, 10), 0)}>${escape(new Date(item.date).toDateString().slice(4))}</time></span>`}</div></div>
        ${ shortDesc
		? `<div class="${""}">${escape(shortDesc)}</div>`
		: ``}</div></a>`
	: `<div class="${"cursor-pointer px-4 py-4 sm:px-6"}"><div class="${"flex items-center justify-between"}"><div class="${"text-sm leading-5 font-medium text-indigo-600 truncate"}">${escape(item.title)}</div>
        <div class="${"ml-2 flex-shrink-0 flex"}"><span class="${"px-2 inline-flex text-xs leading-5 font-semibold rounded-full\n              bg-green-100 text-green-800"}">${escape(item.type)}</span></div></div>
      <div class="${"my-2 sm:flex sm:justify-between"}"><div class="${"sm:flex"}"><div class="${"mr-6 flex items-center text-sm leading-5 text-gray-500"}">
            <svg class="${"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400"}" viewBox="${"0 0 20 20"}" fill="${"currentColor"}"><path d="${"M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z"}"></path></svg>
            ${escape(item.categories && item.categories.length
		? item.categories.join(", ")
		: "Uncategorized")}
            </div></div>
        <div class="${"mt-2 flex text-sm leading-5 text-gray-500 sm:mt-0"}">${item.type === "Talks"
		? `
            ${each(item.instances, instance => `<div class="${"flex"}"><svg class="${"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400"}" viewBox="${"0 0 20 20"}" fill="${"currentColor"}"><path fill-rule="${"evenodd"}" d="${"M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z"}" clip-rule="${"evenodd"}"></path></svg>
                <span><time${add_attribute("datetime", new Date(instance.date).toISOString().slice(0, 10), 0)}>${escape(new Date(instance.date).toDateString().slice(4))}</time>
                  @ ${escape(instance.venue)}</span>
              </div>`)}`
		: `
            <svg class="${"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400"}" viewBox="${"0 0 20 20"}" fill="${"currentColor"}"><path fill-rule="${"evenodd"}" d="${"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"}" clip-rule="${"evenodd"}"></path></svg>
            <span><time${add_attribute("datetime", new Date(item.date).toISOString().slice(0, 10), 0)}>${escape(new Date(item.date).toDateString().slice(4))}</time></span>`}</div></div>
      ${ shortDesc
		? `<div class="${""}">${escape(shortDesc)}</div>`
		: ``}</div>`}
  ${ ``}</div>`;
});

/* src/components/Showcase/Showcase.svelte generated by Svelte v3.25.1 */

const Showcase = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { data } = $$props;
	let filterStr = "";
	if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);
	let filteredData;

	filteredData = data.filter(x => {
		{
			if ( x.type === "Essays") return true;
			if ( x.type === "Talks") return true;
			if ( x.type === "Podcasts") return true;
		}
	}).map(x => {
		if (x.date) x.effectiveDate = new Date(x.date);
		if (x.instances) x.effectiveDate = new Date(x.instances[0].date);
		return x;
	}).sort((a, z) => z.effectiveDate - a.effectiveDate);

	return `<div class="${"relative max-w-lg mx-auto lg:max-w-7xl mb-8"}"><div class="${"text-center"}"><h1 class="${"text-5xl leading-9 tracking-tight font-extrabold text-gray-200\n        sm:text-4xl sm:leading-10"}">Idea Showcase
    </h1>
    <p class="${"mt-3 text-xl leading-7 text-gray-400 sm:mt-4"}">For Free: ${escape(filteredData.length)} Great Ideas. Lightly Used.
    </p></div></div>

<div><div class="${"flex rounded-md mb-4"}">
    <label for="${"search_candidate"}" class="${"sr-only"}">Search</label>
    <div class="${"relative flex-grow focus-within:z-10"}"><div class="${"absolute inset-y-0 left-0 pl-3 flex items-center"}">
        <label for="${"search_candidate"}"><svg class="${"h-5 w-5 text-gray-400"}" viewBox="${"0 0 20 20"}" fill="${"currentColor"}"><path fill-rule="${"evenodd"}" d="${"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"}" clip-rule="${"evenodd"}"></path></svg></label>
        <input id="${"search_candidate"}" type="${"text"}" class="${"form-input block w-full rounded-md pl-2\n            transition ease-in-out duration-150 sm:hidden"}" placeholder="${"Filter"}"${add_attribute("value", filterStr, 1)}>
        <input id="${"search_candidate"}" type="${"text"}" class="${"hidden form-input w-full rounded-md pl-2\n            transition ease-in-out duration-150 sm:block sm:text-sm sm:leading-5"}" placeholder="${"Filter ideas"}"${add_attribute("value", filterStr, 1)}></div></div>
    
    <span class="${"relative z-0 inline-flex flex-col sm:flex-row shadow-sm rounded-md"}"><div class="${"inline-flex items-center mr-2 text-gray-400"}">Show:</div>
      <button type="${"button"}" class="${[
		"-ml-px sm:ml-0 relative inline-flex items-center px-4 py-2 sm:rounded-l-md border\n          border-gray-300 bg-white text-sm leading-5 font-medium text-gray-700\n          hover:text-gray-500 focus:z-10 focus:outline-none\n          focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100\n          active:text-gray-700 transition ease-in-out duration-150",
		 "bg-gray-300" 
	].join(" ").trim()}">Essays
      </button>
      <button type="${"button"}" class="${[
		"-ml-px relative inline-flex items-center px-4 py-2 border\n          border-gray-300 bg-white text-sm leading-5 font-medium text-gray-700\n          hover:text-gray-500 focus:z-10 focus:outline-none\n          focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100\n          active:text-gray-700 transition ease-in-out duration-150",
		 "bg-gray-300" 
	].join(" ").trim()}">Talks
      </button>
      <button type="${"button"}" class="${[
		"-ml-px relative inline-flex items-center px-4 py-2 border\n          border-gray-300 bg-white text-sm leading-5 font-medium text-gray-700\n          hover:text-gray-500 focus:z-10 focus:outline-none\n          focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100\n          active:text-gray-700 transition ease-in-out duration-150",
		 "bg-gray-300" 
	].join(" ").trim()}">Podcasts
      </button>
      <button type="${"button"}" class="${[
		"-ml-px relative inline-flex items-center px-4 py-2 border\n          border-gray-300 bg-white text-sm leading-5 font-medium text-gray-700\n          hover:text-gray-500 focus:z-10 focus:outline-none\n          focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100\n          active:text-gray-700 transition ease-in-out duration-150",
		 ""
	].join(" ").trim()}"><strike>Tutorials</strike></button>
      <button type="${"button"}" class="${[
		"-ml-px relative inline-flex items-center px-4 py-2 sm:rounded-r-md\n          border border-gray-300 bg-white text-sm leading-5 font-medium\n          text-gray-700 hover:text-gray-500 focus:z-10 focus:outline-none\n          focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100\n          active:text-gray-700 transition ease-in-out duration-150",
		 ""
	].join(" ").trim()}"><strike>Notes</strike></button></span>

    
    ${ ``}</div>

  <div class="${" bg-gray-200 shadow overflow-hidden sm:rounded-md"}"><ul>${filteredData.length
	? each(filteredData, item => `<li>${validate_component(ShowcaseItem, "ShowcaseItem").$$render($$result, { item }, {}, {})}
        </li>`)
	: `<div class="${"p-8"}">No Content Types Selected! Please see menu above and pick from either Essays, Talks, or Podcasts</div>`}</ul></div></div>
`;
});

module.exports = Showcase;
